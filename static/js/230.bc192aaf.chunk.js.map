{"version":3,"file":"static/js/230.bc192aaf.chunk.js","mappings":"qSACA,EAAsC,wCAAtC,EAAgG,oCAAhG,EAAiJ,+BAAjJ,EAA6L,+BAA7L,EAA0O,gCAA1O,EAAsR,8BAAtR,EAAmW,+BAAnW,EAAyY,yBAAzY,EAAya,yBAAza,EAAwc,wBAAxc,EAA2e,6B,SCgG3e,EA1Fe,WACb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MA6BjB,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQR,EAAaS,IAAI,SACzBC,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,IAAaH,GAFrB,gBAEPI,EAFO,EAEPA,KACRR,GAAU,OAAIQ,EAAKC,UAHJ,gDAKfC,QAAQC,IAAI,KAAMC,MAClBF,QAAQC,IAAI,KAAME,SANH,yDAAH,qDASZT,EACFE,IAEAN,EAAU,GAEb,GAAE,CAACJ,KAGF,2BACE,qBAASkB,UAAWC,EAApB,WACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAiC,uCACjC,kBAAMC,SAhCO,SAAAC,GAAM,IAAD,EACxBA,EAAEC,iBAEFrB,EAAgB,CACdO,MAAK,UAAEa,EAAEE,cAAcC,SAASC,WAAWC,aAAtC,QAA+C,KAEtDL,EAAEE,cAAcI,OACjB,EAyBqCT,UAAWC,EAAzC,WACE,kBACEH,KAAK,aACLY,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZb,UAAWC,KAEb,mBAAQS,KAAK,SAASV,UAAWC,EAAjC,UACE,SAAC,MAAD,CACEA,OAAQ,CACNa,MAAO,iBAMjB,eAAId,UAAWC,EAAf,SACGhB,GACCA,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,eAApB,OACT,eAAalB,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEkB,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMlC,GACfa,UAAWC,EAHb,UAKGgB,GACC,gBACEK,IAAG,6CAAwCL,GAC3CM,IAAKL,EACLJ,MAAM,MACNd,UAAWC,KAGb,gBACEqB,IAAKE,EACLD,IAAKL,EACLJ,MAAM,MACNd,UAAWC,KAIf,cAAGD,UAAWC,EAAd,SAAgCiB,QAtB3BF,EADA,UA+BtB,C,8LC7FKS,EAAU,mCACVC,EAAe,uBAERC,EAAoB,WAC7B,OAAOC,EAAAA,EAAAA,IAAA,kBAAqBF,EAArB,uCAAgED,GAC1E,EAEYI,EAAkB,SAACC,GAC5B,OAAOF,EAAAA,EAAAA,IAAA,kBAAqBF,EAArB,kBAA2CI,EAA3C,oBAA+DL,GACzE,EAEYhC,EAAe,SAACsC,GACzB,OAAOH,EAAAA,EAAAA,IAAA,kBAAqBF,EAArB,iCAA0DD,EAA1D,kBAA2EM,EAA3E,8BACV,EAEYC,EAAe,SAAChB,GAC3B,OAAOY,EAAAA,EAAAA,IAAA,kBACMF,EADN,kBAC4BV,EAD5B,4BACkDS,GAE1D,EAEYQ,EAAkB,SAACjB,GAC9B,OAAOY,EAAAA,EAAAA,IAAA,kBACMF,EADN,kBAC4BV,EAD5B,4BACkDS,EADlD,WAGR,EAEYS,EAAW,SAAClB,GACvB,OAAOY,EAAAA,EAAAA,IAAA,kBACMF,EADN,kBAC4BV,EAD5B,2BACiDS,GAEzD,C","sources":["webpack://react-homework-template/./src/pages/MoviesPage/moviesPage.module.css?8b89","pages/MoviesPage/MoviesPage.jsx","services/apiMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesSearchSection\":\"moviesPage_moviesSearchSection__c0qTb\",\"formTextWrapper\":\"moviesPage_formTextWrapper__fuhsV\",\"upformText\":\"moviesPage_upformText__qt6O+\",\"searchForm\":\"moviesPage_searchForm__MnrTw\",\"searchInput\":\"moviesPage_searchInput__046Qt\",\"searchBtn\":\"moviesPage_searchBtn__ZEIen\",\"scale\":\"moviesPage_scale__ZATlD\",\"moviesList\":\"moviesPage_moviesList__tVnIy\",\"item\":\"moviesPage_item__g+5t1\",\"link\":\"moviesPage_link__DYSOl\",\"img\":\"moviesPage_img__lZgus\",\"subtitle\":\"moviesPage_subtitle__rIKbJ\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { searchMovies } from 'services/apiMovies';\nimport noImg from '../../images/noImage.jpg';\nimport { BsSearch } from 'react-icons/bs';\nimport styles from './moviesPage.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({\n      query: e.currentTarget.elements.movieTitle.value ?? '',\n    });\n    e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    const fetchMovie = async () => {\n      try {\n        const { data } = await searchMovies(query);\n        setMovies([...data.results]);\n      } catch (error) {\n        console.log(error.name);\n        console.log(error.message);\n      }\n    };\n    if (query) {\n      fetchMovie();\n    } else {\n      setMovies([]);\n    }\n  }, [searchParams]);\n\n  return (\n    <main>\n      <section className={styles.moviesSearchSection}>\n        <div className={styles.formTextWrapper}>\n          <p className={styles.upformText}>Let`s find something interesting!</p>\n          <form onSubmit={handleSubmit} className={styles.searchForm}>\n            <input\n              name=\"movieTitle\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movie\"\n              className={styles.searchInput}\n            />\n            <button type=\"submit\" className={styles.searchBtn}>\n              <BsSearch\n                styles={{\n                  width: '25',\n                }}\n              />\n            </button>\n          </form>\n        </div>\n        <ul className={styles.moviesList}>\n          {movies &&\n            movies.map(({ id, poster_path, original_title }) => (\n              <li key={id} className={styles.item}>\n                <Link\n                  to={`/movies/${id}`}\n                  state={{ from: location }}\n                  className={styles.link}\n                >\n                  {poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/original${poster_path}`}\n                      alt={original_title}\n                      width=\"275\"\n                      className={styles.img}\n                    />\n                  ) : (\n                    <img\n                      src={noImg}\n                      alt={original_title}\n                      width=\"275\"\n                      className={styles.img}\n                    />\n                  )}\n\n                  <p className={styles.subtitle}>{original_title}</p>\n                </Link>\n              </li>\n            ))}\n        </ul>\n      </section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '5cc33dbe2a444448fed26d3844693d78';\nconst BASE_API_URL = 'api.themoviedb.org/3'\n\nexport const getTrendingMovies = () => {\n    return axios.get(`https://${BASE_API_URL}/trending/movie/day?api_key=${API_KEY}`)\n}\n\nexport const getMovieDetails = (movie_id) => {\n    return axios.get(`https://${BASE_API_URL}/movie/${movie_id}?api_key=${API_KEY}`)\n}\n\nexport const searchMovies = (title) => {\n    return axios.get(`https://${BASE_API_URL}/search/movie?api_key=${API_KEY}&query=${title}&page=1&include_adult=true`)\n}\n\nexport const getMovieCast = (id) => {\n  return axios.get(\n    `https://${BASE_API_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const getMovieReviews = (id) => {\n  return axios.get(\n    `https://${BASE_API_URL}/movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n};\n\nexport const getVideo = (id) => {\n  return axios.get(\n    `https://${BASE_API_URL}/movie/${id}/videos?api_key=${API_KEY}`\n  );\n};"],"names":["useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","useEffect","query","get","fetchMovie","searchMovies","data","results","console","log","name","message","className","styles","onSubmit","e","preventDefault","currentTarget","elements","movieTitle","value","reset","type","autoComplete","autoFocus","placeholder","width","map","id","poster_path","original_title","to","state","from","src","alt","noImg","API_KEY","BASE_API_URL","getTrendingMovies","axios","getMovieDetails","movie_id","title","getMovieCast","getMovieReviews","getVideo"],"sourceRoot":""}